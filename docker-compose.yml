secrets:
  jwt:
    file: ./authelia/secrets/jwt
  encryption_key:
    file: ./authelia/secrets/encryption_key
  smtp:
    file: ./authelia/secrets/smtp
  session:
    file: ./authelia/secrets/session

volumes:
  prometheus-data:
    driver: local

services:
  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=985
      - TZ=America/New_York
      - URL=dillonjason.dev
      - SUBDOMAINS=apollo,code-server
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - ./swag/config:/config
    ports:
      - 443:443
    restart: unless-stopped
  authelia:
    image: authelia/authelia
    container_name: authelia
    secrets:
      - jwt
      - smtp
      - encryption_key
      - session
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/jwt
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/encryption_key
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/run/secrets/smtp
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/session
      - TZ=America/New_York
      - PUID=1000
      - PGID=985
    volumes:
      - ./authelia/config:/config
    restart: unless-stopped
  homer:
    image: b4bz/homer:latest
    volumes:
      - ./homer/assets:/www/assets
    ports:
      - 8080:8080
    environment:
      - UID=1000
      - GID=985
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    # user: uid:gid
    # network_mode: "bridge"
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /mnt/Media/media:/media
    restart: "unless-stopped"
    environment:
      - TZ=America/New_York
      - UID=1000
      - GID=985
  code-server:
    image: codercom/code-server:latest
    container_name: code-server
    volumes:
      - ./code-server/config:/home/coder/.config
      - /home/dillon/Projects:/home/coder/project
      - /home/dillon/Packages/home-server:/home/coder/home-server
    environment:
      - UID=1000
      - GID=985
      - DOCKER_USER=$USER
      - TZ=America/New_York
  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission
    restart: "unless-stopped"
    volumes:
      - ./transmission/config:/config
      - /mnt/Media/torrents:/downloads
    cap_add:
      - NET_ADMIN
    env_file:
      - ./transmission/.env
  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - ./redis/data:/data
    restart: unless-stopped
    environment:
      - TZ=America/New_York
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=985
      - TZ=America/New_York
      - AUTO_UPDATE=true
    volumes:
      - ./jackett/config:/config
      - ./jackett/downloads:/downloads
    restart: unless-stopped
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=985
      - TZ=America/New_York
    volumes:
      - ./sonarr/config:/config
      - /mnt/Media:/data
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=985
      - TZ=America/New_York
    volumes:
      - ./radarr/config:/config
      - /mnt/Media:/data
    restart: unless-stopped
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    user: "1000"
    environment:
      - PUID=1000
      - PGID=985
      - TZ=America/New_York
      - GF_SERVER_ROOT_URL=https://apollo.dillonjason.dev/grafana
      - GF_SERVER_DOMAIN=https://apollo.dillonjason.dev/
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
    restart: unless-stopped
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/config:/config
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/config/prometheus.yml"
      - "--web.external-url=https://prometheus.dillonjason.dev"
      - "--web.route-prefix=/"
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
